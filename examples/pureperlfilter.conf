# 
# Configuration file for Courier::Filter, the purely Perl-based filter
# framework for the Courier MTA.
#
# (This is an example configuration file.)
#
# $Id: pureperlfilter.conf,v 1.2 2004/10/05 10:08:56 julian Exp $
#
##############################################################################

use Courier::Filter::Logger::Syslog;
use Courier::Filter::Logger::File;

use Courier::Filter::Module::DNSBL;
use Courier::Filter::Module::SPF;
use Courier::Filter::Module::Envelope;
use Courier::Filter::Module::Header;
use Courier::Filter::Module::Parts;

$options = {
    
    # Logger Declaration:
    ##############################################################################
    
    logger      => Courier::Filter::Logger::File->new(
        file_name   => '/var/log/courier-filter.log',
        timestamp   => TRUE
    ),

    # Module Declarations:
    ##############################################################################

    modules     => [
        
        # Reject weird subjects:
        Courier::Filter::Module::Header->new(
            fields      => {
                subject         => qr/fuzzybuzzy/
            },
            response    => 'No fuzzybuzzy, please!',
            testing     => TRUE,
            logger      => Courier::Filter::Logger::Syslog->new()
        ),
        
        # Exempt mails from a forwarding account from the remaining filters:
        Courier::Filter::Module::Header->new(
            inverse     => TRUE,
            fields      => {
                'x-resent-for'  => 'me@forwarding-target.net'
            }
        ),
        
        # Reject black-listed sending IP addresses:
        Courier::Filter::Module::DNSBL->new(
            zones       => [qw(
                bl.spamcop.net
                relays.ordb.org
                dnsbl.njabl.org
                dynablock.njabl.org
                dul.dnsbl.sorbs.net
                zombie.dnsbl.sorbs.net
            )]
        ),
        
        # SPF filter:
        Courier::Filter::Module::SPF->new(
            reject_on           => ['fail', 'error'],
            trusted_forwarders  => TRUE,
            fallback_guess      => FALSE,
            trusting            => TRUE
        ),
        
        # Filter certain virm:
        Courier::Filter::Module::Envelope->new(
            fields      => {
                'sender'        => 'paul.greenfield@unisys.com'
            }
        ),
        
        # Reject various virm:
        Courier::Filter::Module::Parts->new(
            max_message_size    => 1024*1024,
            max_part_size       =>  200*1024,
            views       => ['raw', 'zip'],
            signatures  => [
                {
                    file_name   => qr/\.(com|exe|lnk|pif|scr|vbs)$/i,
                    views       => ['raw'],
                    response    => 'Win32 executable attachment detected'
                },
                {
                    encrypted   => TRUE,
                    views       => ['zip'],
                    response    => 'Worm suspected (only worms and fools use ZIP encryption)'
                },
                {
                    size        => 25353,
                    digest_md5  => '0e17dbec1904b7c10614bfb29ef758fd',
                    response    => 'Worm detected: W32.Netsky.C'
                },
                {
                    size        => 22528,
                    digest_md5  => '53df39092394741514bc050f3d6a06a9',
                    response    => 'Worm detected: W32.Mydoom'
                },
                {
                    size        => 11264,
                    digest_md5  => 'f4cc1b17617b9cfcfeb90e73356b8639',
                    response    => 'Worm detected: W32.Bagle.B'
                },
                {
                    size        => 15872,
                    digest_md5  => 'e65d7ab639a2361493d388e36d1e663a',
                    response    => 'Worm detected: W32.Bagle.A'
                },
                {
                    size        => 106496,
                    digest_md5  => 'b09e26c292759d654633d3c8ed00d18d',
                    response    => 'Worm detected: W32.Swen'
                },
                {
                    # Detect one of the images sent by W32.Swen, as a
                    # reliable fallback.
                    size        => 3639,
                    digest_md5  => '476225849b39aff9bb18d7fac79ad7da',
                    response    => 'Worm suspected: W32.Swen'
                }
            ]
        )
        
    ]
    
};

# vim:tw=79
